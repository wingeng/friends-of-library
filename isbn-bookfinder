#!/usr/bin/python

import re
import pdb
import sys
import json
from subprocess import Popen, PIPE

def run (cmd, quiet = False):
    p = Popen(cmd, shell=True, stdout=PIPE, stderr=PIPE)
    if not quiet:
        print(cmd)
        print("")

    output = ""
    while True:
        s = p.stdout.readline()
        if not quiet:
            sys.stdout.write(s)
            sys.stdout.flush()

        output += s

        if p.poll() != None:
            break

    return (p.returncode, output)

def get_isbn_url(isbn):
    url = "https://www.bookfinder.com/search/?"
    url += "lang=en"
    url += "&new_used=U"
    url += "&destination=us"
    url += "&currency=USD"
    url += "&isbn=%s" % isbn
    url += "&mode=advanced"
    url += "&st=sr"
    url += "&ac=qr"

    return url

def get_isbn_output(isbn):
    url = get_isbn_url(isbn)
    cmd = "curl --no-buffer -s '%s' " % url
    cmd += "| ruby ./bookfinder-extractor"
    (rc, output) = run(cmd, True)

    return output

def log(s):
    with open("/tmp/nuts.log", "a") as f:
        f.write(str(s) + '\n')

def get_json_info(isbn):
    isbn_json = get_isbn_output(isbn)
    try:
        j = json.loads(isbn_json)
    except Exception as e:
        log("Error parsing '%s'" % isbn_json)
        log(e)
        j = json.loads('''
                {"return-code" : "true",
                 "title" : "Couldn't find:",
                 "author" : "",
                 "image-url" : "",
                 "price": 0,
                 "detail-page" : ""
                 }
                ''')

    js = '''
    { "return-code" : "%s",
      "title" : "%s",
      "author" : "%s",
      "image-url" : "%s",
      "price": "$%2.2f",
      "detail-page" : "%s"
    }
    ''' % (
        j['return-code'],
        j['title'],
        j['author'],
        j['image-url'],
        j['price'],
        get_isbn_url(isbn))


    return js
        

if __name__ == "__main__":
    import sys
    if len(sys.argv) > 1:
        isbn = sys.argv[1]
        json = get_json_info(isbn)
        print(json)
    else:
        print('{"return-code" : "false", "error-message" : "invalid arguments, need isbn"}')

# Local Variables: 
# mode: python
# End:
#
